{
  "appName": {
    "message": "BLOCKoli - Web request blocker",
    "description": "The description of the extension, displayed in the web store."
  },
  "appDesc": {
    "message": "Block or allow web network requests by rules such as domain, URL, request method, etc.",
    "description": "The description of the extension, displayed in the web store."
  },
  "Options": {
    "message": "Options"
  },
  "EnableRules": {
    "message": "Enable rules"
  },
  "RuleSets": {
    "message": "Rule Sets"
  },
  "empty_ruleset": {
    "message": "There are no rule sets available. Click the button below to add it."
  },
  "Notice": {
    "message": "Notice"
  },
  "notice1_1": {
    "message": "The network blocking and passing rules provided by this extension utilize the chrome.declarativeNetRequest API. As such, the limitations of this API still applied. See"
  },
  "notice1_2": {
    "message": "in the API reference for more information about the limits."
  },
  "notice_2": {
    "message": "Under no circumstances will the author of this extension is not responsible for any loss, damage or inconvenience caused by the use of this extension."
  },
  "AddARuleSet": {
    "message": "Add a Rule Set"
  },
  "AddARule": {
    "message": "Add a Rule"
  },
  "RemoveTheRuleSet": {
    "message": "Remove the Rule Set"
  },
  "RemoveTheRule": {
    "message": "Remove the Rule"
  },
  "remove_rule_set_confirmation_title": {
    "message": "Remove the Rule Set"
  },
  "remove_rule_confirmation_title": {
    "message": "Remove the Rule"
  },
  "remove_confirmation": {
    "message": "Are you sure you want to remove?"
  },
  "Cancel": {
    "message": "Cancel"
  },
  "Save": {
    "message": "Save"
  },
  "Remove": {
    "message": "Remove"
  },
  "Editing": {
    "message": "Editing"
  },
  "Edit": {
    "message": "Edit"
  },
  "Action": {
    "message": "Action"
  },
  "action_block": {
    "message": "block"
  },
  "action_allow": {
    "message": "allow"
  },
  "Condition": {
    "message": "Condition"
  },
  "explain_condition": {
    "message": "All rules are optional, but at least one must be specified"
  },
  "RequestMethods": {
    "message": "Request Methods"
  },
  "URLFilter": {
    "message": "URL Filter"
  },
  "UseRegex": {
    "message": "Use regex"
  },
  "RequestDomains": {
    "message": "Request Domains"
  },
  "InitiatorDomains": {
    "message": "Initiator Domains"
  },
  "ResourceTypes": {
    "message": "Resource Types"
  },
  "ALL": {
    "message": "ALL"
  },
  "NotSpecified": {
    "message": "Not specified"
  },
  "hint_Note": {
    "message": "Note"
  },
  "hint_InitiatorDomains_1": {
    "message": "Specify the originating domain of the request as a comma-separated list."
  },
  "hint_InitiatorDomains_2": {
    "message": "The rule will only match network requests originating from the list of initiator domains. If the list is empty, the rule is applied to requests from all domains."
  },
  "hint_InitiatorDomains_note_1": {
    "message": "This matches against the request initiator and not the request url."
  },
  "hint_URLFilter_1": {
    "message": "The pattern which is matched against the network request url."
  },
  "hint_URLFilter_2": {
    "message": "For available formats, see"
  },
  "hint_URLFilter_3": {
    "message": "."
  },
  "hint_URLFilter_note_1_1": {
    "message": "This filter must be composed of only ASCII characters. This is matched against a url where the host is encoded in the punycode format (in case of internationalized domains) and any other non-ascii characters are url encoded in utf-8."
  },
  "hint_URLFilter_note_1_2": {
    "message": "For example, when the request url is http://abc.рф?q=ф, this filter will be matched against the url http://abc.xn--p1ai/?q=%D1%84."
  },
  "hint_URLFilterWithRegex_title": {
    "message": "URL Filter with Regex"
  },
  "hint_URLFilterWithRegex_1": {
    "message": "Regular expression to match against the network request url. This follows the"
  },
  "hint_URLFilterWithRegex_2": {
    "message": "."
  },
  "hint_URLFilterWithRegex_note_1_1": {
    "message": "This filter must be composed of only ASCII characters. This is matched against a url where the host is encoded in the punycode format (in case of internationalized domains) and any other non-ascii characters are url encoded in utf-8."
  },
  "hint_URLFilterWithRegex_note_1_2": {
    "message": "For example, when the request url is http://abc.рф?q=ф, this filter will be matched against the url http://abc.xn--p1ai/?q=%D1%84."
  },
  "hint_URLFilterWithRegex_note_2": {
    "message": "The total number of regex rules cannot exceed 1000."
  },
  "hint_URLFilterWithRegex_note_3": {
    "message": "Each rule must be less than 2KB once compiled. This roughly correlates with the complexity of the rule. If you try to load a rule that exceeds this limit, you will see a warning like the one below and the rule will be ignored."
  },
  "hint_RequestDomains_1": {
    "message": "Specify the domains in the request url as a comma-separated list."
  },
  "hint_RequestDomains_2": {
    "message": "The rule will only match network requests when the domain matches one from this list. If the list is omitted, the rule is applied to requests from all domains."
  },
  "hint_Domains_note_1": {
    "message": "Sub-domains like \"a.example.com\" are also allowed."
  },
  "hint_Domains_note_2": {
    "message": "The entries must consist of only ascii characters."
  },
  "hint_Domains_note_3": {
    "message": "Use punycode encoding for internationalized domains."
  },
  "hint_Domains_note_4": {
    "message": "Sub-domains of the listed domains are also matched."
  },
  "hint_RequestMethods_1": {
    "message": "List of HTTP request methods which the rule can match."
  },
  "hint_RequestMethods_note_1": {
    "message": "Specifying a Request Methods rule condition will also exclude non-HTTP(s) requests."
  },
  "hint_ResourceTypes_1": {
    "message": "List of resource types which the rule can match."
  },
  "ConfigureRules": {
    "message": "Configure rules"
  },
  "MatchedRulesInTabs": {
    "message": "Matched rules in tabs"
  },
  "table_MatchedRules_column_timestamp": {
    "message": "timestamp"
  },
  "table_MatchedRules_column_rule": {
    "message": "rule"
  },
  "initial_setup_message_1": {
    "message": "No rules are defined."
  },
  "initial_setup_message_2": {
    "message": "First, please set up the rules on the page linked below."
  },

  "ExportAndImportRules": {
    "message": "Export and Import Rules"
  },
  "ExportRules": {
    "message": "Export rules"
  },
  "ImportRules": {
    "message": "Import rules"
  },
  "export_description": {
    "message": "Export all rules to a file with JSON format."
  },
  "Export": {
    "message": "Export"
  },
  "Import": {
    "message": "Import"
  },
  "import_description1": {
    "message": "Import the exported file and add it as rule sets."
  },
  "import_description2": {
    "message": "If rule sets defined with the same name exist, they will be overwritten."
  },
  "import_description3": {
    "message": "Reads the specified file and adds it as rule sets."
  },
  "import_description4": {
    "message": "Are you sure you want to import?"
  },

  "must_not_have_additional_properties": {
    "message": "must NOT have additional properties",
    "description": "error message by validation with schema"
  },
  "must_not_have_fewer_than_1_characters": {
    "message": "must NOT have fewer than 1 characters",
    "description": "error message by validation with schema"
  },
  "must_not_have_fewer_than_1_items": {
    "message": "must NOT have fewer than 1 items",
    "description": "error message by validation with schema"
  },
  "must_be_array": {
    "message": "must be array",
    "description": "error message by validation with schema"
  },
  "must_be_boolean": {
    "message": "must be boolean",
    "description": "error message by validation with schema"
  },
  "must_be_either_block_or_allow": {
    "message": "must be either 'block' or 'allow'",
    "description": "error message by validation with schema"
  },
  "must_be_equal_to_one_of_the_allowed_values": {
    "message": "must be equal to one of the allowed values",
    "description": "error message by validation with schema"
  },
  "must_be_object": {
    "message": "must be object",
    "description": "error message by validation with schema"
  },
  "must_be_string": {
    "message": "must be string",
    "description": "error message by validation with schema"
  },
  "must_contain_at_least_one_rule": {
    "message": "must contain at least one rule",
    "description": "error message by validation with schema"
  },
  "must_have_required_property_action": {
    "message": "must have required property 'action'",
    "description": "error message by validation with schema"
  },
  "must_have_required_property_condition": {
    "message": "must have required property 'condition'",
    "description": "error message by validation with schema"
  },
  "must_have_required_property_name": {
    "message": "must have required property 'name'",
    "description": "error message by validation with schema"
  },
  "must_have_required_property_rules": {
    "message": "must have required property 'rules'",
    "description": "error message by validation with schema"
  },
  "must_have_required_property_type": {
    "message": "must have required property 'type'",
    "description": "error message by validation with schema"
  },
  "must_not_be_an_invalid_regular_expression": {
    "message": "must not be an invalid regular expression",
    "description": "error message by validation with schema"
  },
  "must_not_contain_non_ascii_code": {
    "message": "must not contain non-ascii code",
    "description": "error message by validation with schema"
  },
  "must_not_contain_non_ascii_code_and_space": {
    "message": "must not contain non-ascii code and space",
    "description": "error message by validation with schema"
  }
}
